//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOA.Web.ClientTest.MyWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyWebService.MyWebServiceSoap")]
    public interface MyWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        // CODEGEN: 消息 SayHiRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SayHi", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SOA.Web.ClientTest.MyWebService.SayHiResponse SayHi(SOA.Web.ClientTest.MyWebService.SayHiRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SayHi", ReplyAction="*")]
        System.Threading.Tasks.Task<SOA.Web.ClientTest.MyWebService.SayHiResponse> SayHiAsync(SOA.Web.ClientTest.MyWebService.SayHiRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3163.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerSoapHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SayHi", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SayHiRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public SOA.Web.ClientTest.MyWebService.CustomerSoapHeader CustomerSoapHeader;
        
        public SayHiRequest() {
        }
        
        public SayHiRequest(SOA.Web.ClientTest.MyWebService.CustomerSoapHeader CustomerSoapHeader) {
            this.CustomerSoapHeader = CustomerSoapHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SayHiResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SayHiResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SayHiResult;
        
        public SayHiResponse() {
        }
        
        public SayHiResponse(string SayHiResult) {
            this.SayHiResult = SayHiResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MyWebServiceSoapChannel : SOA.Web.ClientTest.MyWebService.MyWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyWebServiceSoapClient : System.ServiceModel.ClientBase<SOA.Web.ClientTest.MyWebService.MyWebServiceSoap>, SOA.Web.ClientTest.MyWebService.MyWebServiceSoap {
        
        public MyWebServiceSoapClient() {
        }
        
        public MyWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOA.Web.ClientTest.MyWebService.SayHiResponse SOA.Web.ClientTest.MyWebService.MyWebServiceSoap.SayHi(SOA.Web.ClientTest.MyWebService.SayHiRequest request) {
            return base.Channel.SayHi(request);
        }
        
        public string SayHi(SOA.Web.ClientTest.MyWebService.CustomerSoapHeader CustomerSoapHeader) {
            SOA.Web.ClientTest.MyWebService.SayHiRequest inValue = new SOA.Web.ClientTest.MyWebService.SayHiRequest();
            inValue.CustomerSoapHeader = CustomerSoapHeader;
            SOA.Web.ClientTest.MyWebService.SayHiResponse retVal = ((SOA.Web.ClientTest.MyWebService.MyWebServiceSoap)(this)).SayHi(inValue);
            return retVal.SayHiResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SOA.Web.ClientTest.MyWebService.SayHiResponse> SOA.Web.ClientTest.MyWebService.MyWebServiceSoap.SayHiAsync(SOA.Web.ClientTest.MyWebService.SayHiRequest request) {
            return base.Channel.SayHiAsync(request);
        }
        
        public System.Threading.Tasks.Task<SOA.Web.ClientTest.MyWebService.SayHiResponse> SayHiAsync(SOA.Web.ClientTest.MyWebService.CustomerSoapHeader CustomerSoapHeader) {
            SOA.Web.ClientTest.MyWebService.SayHiRequest inValue = new SOA.Web.ClientTest.MyWebService.SayHiRequest();
            inValue.CustomerSoapHeader = CustomerSoapHeader;
            return ((SOA.Web.ClientTest.MyWebService.MyWebServiceSoap)(this)).SayHiAsync(inValue);
        }
    }
}
